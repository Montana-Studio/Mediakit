'use strict';

<<<<<<< HEAD
var spawn = require('child_process').spawn;
var executable = require('executable');
var spawnSync = require('spawn-sync');

module.exports = function (bin, cmd, cb) {
	if (typeof cmd === 'function') {
		cb = cmd;
		cmd = ['--help'];
	}

	executable(bin, function (err, works) {
		if (err) {
			cb(err);
			return;
		}

		if (!works) {
			cb(new Error('Couldn\'t execute the `' + bin + '` binary. Make sure it has the right permissions.'));
			return;
		}

		var cp = spawn(bin, cmd);

		cp.on('error', cb);
		cp.on('exit', function (code) {
			cb(null, code === 0);
		});
	});
};

module.exports.sync = function (bin, cmd) {
	cmd = cmd || ['--help'];

	if (!executable.sync(bin)) {
		return false;
	}

	return spawnSync(bin, cmd).status === 0;
=======
var executable = require('executable');
var spawn = require('child_process').spawn;

/**
 * Check if a executable is working correctly by checking it's exit code
 *
 * @param {String} bin
 * @param {Array} cmd
 * @param {Function} cb
 * @api public
 */

module.exports = function (bin, cmd, cb) {
    if (typeof cmd === 'function') {
        cb = cmd;
        cmd = ['--help'];
    }

    executable(bin, function (err, w) {
        if (err) {
            cb(err);
            return;
        }

        if (w) {
            spawn(bin, cmd)
                .on('error', function (err) {
                    cb(err);
                    return;
                })
                .on('exit', function (code) {
                    cb(null, code === 0 ? true : false);
                    return;
                });
        } else {
            cb(new Error('Couldn\'t execute the `' + bin + '` binary. Make sure it has the right permissions.'));
            return;
        }
    });
>>>>>>> f8417fafd5bf20d329bf2e3402fca16fd839cf1f
};
