{
  "name": "file-type",
<<<<<<< HEAD
  "version": "2.7.0",
=======
  "version": "2.5.0",
>>>>>>> f8417fafd5bf20d329bf2e3402fca16fd839cf1f
  "description": "Detect the file type of a Buffer/Uint8Array",
  "license": "MIT",
  "repository": {
    "type": "git",
<<<<<<< HEAD
    "url": "https://github.com/sindresorhus/file-type"
=======
    "url": "git://github.com/sindresorhus/file-type"
>>>>>>> f8417fafd5bf20d329bf2e3402fca16fd839cf1f
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bin": {
    "file-type": "cli.js"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "node test.js"
  },
  "files": [
    "index.js",
    "cli.js"
  ],
  "keywords": [
<<<<<<< HEAD
    "cli-app",
    "cli",
=======
>>>>>>> f8417fafd5bf20d329bf2e3402fca16fd839cf1f
    "mime",
    "file",
    "type",
    "archive",
    "image",
    "img",
    "pic",
    "picture",
    "flash",
    "photo",
    "video",
    "type",
    "detect",
    "check",
    "is",
    "exif",
    "exe",
    "binary",
    "buffer",
    "uint8array",
<<<<<<< HEAD
=======
    "cli",
    "bin",
>>>>>>> f8417fafd5bf20d329bf2e3402fca16fd839cf1f
    "jpg",
    "png",
    "gif",
    "webp",
    "tif",
    "bmp",
    "jxr",
    "psd",
    "zip",
    "tar",
    "rar",
    "gz",
    "bz2",
    "7z",
    "mp4",
<<<<<<< HEAD
    "m4v",
=======
>>>>>>> f8417fafd5bf20d329bf2e3402fca16fd839cf1f
    "mkv",
    "webm",
    "mov",
    "avi",
    "mpg",
    "mp3",
    "m4a",
    "ogg",
    "flac",
    "wav",
    "pdf",
    "epub",
    "exe",
    "swf",
    "rtf",
    "woff",
    "woff2",
    "eot",
    "ttf",
    "otf",
    "ico",
    "flv",
<<<<<<< HEAD
    "ps",
    "xz"
=======
    "ps"
>>>>>>> f8417fafd5bf20d329bf2e3402fca16fd839cf1f
  ],
  "dependencies": {
    "meow": "^3.0.0"
  },
  "devDependencies": {
    "ava": "0.0.4",
    "read-chunk": "^1.0.0"
  },
<<<<<<< HEAD
  "gitHead": "f3b02ecd76be5bb546439318bf1cd5604ef31a29",
=======
  "readme": "# file-type [![Build Status](https://travis-ci.org/sindresorhus/file-type.svg?branch=master)](https://travis-ci.org/sindresorhus/file-type)\n\n> Detect the file type of a Buffer/Uint8Array\n\nThe file type is detected by checking the [magic number](http://en.wikipedia.org/wiki/Magic_number_(programming)#Magic_numbers_in_files) of the buffer.\n\n\n## Install\n\n```\n$ npm install --save file-type\n```\n\n\n## Usage\n\n##### Node.js\n\n```js\nvar readChunk = require('read-chunk'); // npm install read-chunk\nvar fileType = require('file-type');\nvar buffer = readChunk.sync('unicorn.png', 0, 262);\n\nfileType(buffer);\n//=> {ext: 'png', mime: 'image/png'}\n```\n\nor from a remote location:\n\n```js\nvar http = require('http');\nvar fileType = require('file-type');\nvar url = 'http://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif';\n\nhttp.get(url, function (res) {\n\tres.once('data', function (chunk) {\n\t\tres.destroy();\n\t\tconsole.log(fileType(chunk));\n\t\t//=> {ext: 'gif', mime: 'image/gif'}\n\t});\n});\n```\n\n##### Browser\n\n```js\nvar xhr = new XMLHttpRequest();\nxhr.open('GET', 'unicorn.png');\nxhr.responseType = 'arraybuffer';\n\nxhr.onload = function () {\n\tfileType(new Uint8Array(this.response));\n\t//=> {ext: 'png', mime: 'image/png'}\n};\n\nxhr.send();\n```\n\n\n## API\n\n### fileType(buffer)\n\nReturns an object (or `null` when no match) with:\n\n- `ext` - one of the [supported file types](#supported-file-types)\n- `mime` - the [MIME type](http://en.wikipedia.org/wiki/Internet_media_type)\n\n#### buffer\n\nType: `buffer` *(Node.js)*, `uint8array`\n\nIt only needs the first 262 bytes.\n\n\n## CLI\n\n```\n$ npm install --global file-type\n```\n\n```sh\n$ file-type --help\n\n  Usage\n    file-type <filename>\n    cat <filename> | file-type\n\n  Example\n    cat unicorn.png | file-type\n    png\n```\n\n\n## Supported file types\n\n- `jpg`\n- `png`\n- `gif`\n- `webp`\n- `tif`\n- `bmp`\n- `jxr`\n- `psd`\n- `zip`\n- `tar`\n- `rar`\n- `gz`\n- `bz2`\n- `7z`\n- `mp4`\n- `mkv`\n- `webm`\n- `mov`\n- `avi`\n- `wmv`\n- `mpg`\n- `mp3`\n- `m4a`\n- `ogg`\n- `flac`\n- `wav`\n- `pdf`\n- `epub`\n- `exe`\n- `swf`\n- `rtf`\n- `woff`\n- `woff2`\n- `eot`\n- `ttf`\n- `otf`\n- `ico`\n- `flv`\n- `ps`\n\n*SVG isn't included as it requires the whole file to be read, but you can get it [here](https://github.com/sindresorhus/is-svg).*\n\n*PR welcome for additional commonly used file types.*\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
>>>>>>> f8417fafd5bf20d329bf2e3402fca16fd839cf1f
  "bugs": {
    "url": "https://github.com/sindresorhus/file-type/issues"
  },
  "homepage": "https://github.com/sindresorhus/file-type",
<<<<<<< HEAD
  "_id": "file-type@2.7.0",
  "_shasum": "59ac58a198f037574b1d820eb6d8b77163fbb715",
  "_from": "file-type@>=2.0.1 <3.0.0",
  "_npmVersion": "2.10.1",
  "_nodeVersion": "0.12.4",
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "dist": {
    "shasum": "59ac58a198f037574b1d820eb6d8b77163fbb715",
    "tarball": "http://registry.npmjs.org/file-type/-/file-type-2.7.0.tgz"
  },
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    },
    {
      "name": "kevva",
      "email": "kevinmartensson@gmail.com"
    }
  ],
  "directories": {},
  "_resolved": "https://registry.npmjs.org/file-type/-/file-type-2.7.0.tgz",
  "readme": "ERROR: No README data found!"
=======
  "_id": "file-type@2.5.0",
  "_from": "file-type@^2.0.1"
>>>>>>> f8417fafd5bf20d329bf2e3402fca16fd839cf1f
}
